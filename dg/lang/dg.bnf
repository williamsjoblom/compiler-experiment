unit = Stmt*						@CompilationUnit;

Stmt = Expr ";"						@ExprStmt
     | FunDecl
     | VarDecl ";"
     | Pln ";";

## Expression.
Expr = <num>						@Number
     | <id>						@Var
     |  :group "(" Expr ")"
     || :left "(" Expr ("," Expr)* ")"	 		@TupleExpr
     || :left Expr "." <num>				@TupleIndexAccess
     |	:left Expr "." <id>				@TupleNameAccess
     || :right "-" Expr					@NegExpr
     || :left Expr "*" Expr 				@MulExpr
     |  :left Expr "/" Expr    				@DivExpr
     || :left Expr "+" Expr				@AddExpr
     |  :left Expr "-" Expr				@SubExpr
     || :right Expr "=" Expr				@AssExpr;


Block = "{" Stmt* "}"					@Block;

Type = "(" InnerType ("," InnerType)* ")"		@Type
     | InnerType					@Type;
InnerType = <id>					@InnerType;

FunDecl = "fun" <id> ParamList
	  ("->" Type)? Block				@FunDecl;

ParamList = "(" (Param ("," Param)*)? ")" 		@ParamList;
Param = <id> ":" Type					@Param;

VarDecl = "var" <id> ":" Type? ("=" Expr)?		@VarDecl;

Pln = "pln" Expr					@Pln;
